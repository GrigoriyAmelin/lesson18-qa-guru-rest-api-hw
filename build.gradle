plugins {
    id 'java-library'
}

repositories {
    mavenCentral()
}

dependencies {
    testImplementation(
            'io.rest-assured:rest-assured:5.0.1',
            'org.junit.jupiter:junit-jupiter:5.8.2',
            'org.slf4j:slf4j-simple:1.7.36',
            'com.codeborne:selenide:6.4.0'
    )
}

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

tasks.withType(Test) {
    systemProperties(System.getProperties())
    useJUnitPlatform()

    if (System.getProperty("threads") != null) {
        systemProperties += [
                'junit.jupiter.execution.parallel.enabled'                 : true,
                'junit.jupiter.execution.parallel.mode.default'            : 'concurrent',
                'junit.jupiter.execution.parallel.mode.classes.default'    : 'concurrent',
                'junit.jupiter.execution.parallel.config.strategy'         : 'fixed',
                'junit.jupiter.execution.parallel.confid.fixed.parallelism': System.getProperty("threads").toInteger()
        ]
    }

    testLogging {
        lifecycle {
//            events "started", "skipped"
            events "STARTED", "SKIPPED", "FAILED", "STANDARD_ERROR", "STANDARD_OUT", "PASSED"
            exceptionFormat "short"
        }
    }
}